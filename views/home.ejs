
<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
    body {
      height: 100vh;               /* Full screen height */
      width: 100vw;                /* Full screen width */
      margin: 0;                   /* Remove default margin */
      display: flex;               /* Center content */
      align-items: center;
      justify-content: center;
      color: white;                /* Text color */
      overflow: hidden;            /* Same as Tailwind's overflow-hidden */
      
      /* Equivalent gradient */
      background: linear-gradient(
        to right,                  /* bg-gradient-to-r */
        #6366f1,                   /* from-indigo-500 */
        #a855f7,                   /* via-purple-500 */
        #ec4899                    /* to-pink-500 */
      );
    }
  </style>
  </head>
  <body class="bg-gray-100 dark:bg-gray-800 h-screen w-screen flex flex-col items-center justify-center">

    <!-- Floating Background Icons -->
    <div class="absolute top-20 left-10 text-7xl text-white/30 animate-bounce">‚òÅÔ∏è</div>
    <div class="absolute bottom-32 right-16 text-7xl text-yellow-300/30 animate-pulse">üìÇ</div>
    <div class="absolute top-40 right-1/8 text-7xl text-green-300/30 animate-bounce">‚¨ÜÔ∏è</div>
    <div class="absolute bottom-20 left-1/8 text-7xl text-blue-300/30 animate-pulse">üìÑ</div>
    <div class="absolute top-10 right-170 text-7xl text-purple-300/30 animate-spin">üîí</div>
    <div class="absolute bottom-1/10 right-1/3 text-7xl text-red-300/30 animate-bounce">üì§</div> 
    <div class="absolute top-1/2 right-280 text-7xl text-teal-300/30 animate-pulse">üîë</div> 

    <!-- Back Button -->
<a href="/user/login"
   class="fixed top-6 left-6 inline-block px-6 py-3 text-lg font-bold text-white 
         bg-pink-300 rounded-3xl shadow-lg 
         transform transition duration-200 hover:scale-110 hover:bg-pink-400">
  <i class="fa-solid fa-arrow-left"></i> Back
</a>


    <!-- Main buttons -->
    <div class="flex flex-col items-center">
   
    <button
  onclick="showPop()"
  class="bg-yellow-300 hover:bg-yellow-400 text-white font-bold text-2xl rounded-3xl shadow-lg 
         flex items-center justify-center w-52 h-52 
         transform transition-transform duration-200 hover:scale-110">
  UPLOAD FILE
</button>

<!-- Rectangular Go to Files Button -->
<a href="/files"
  class="mt-[90px] bg-blue-300 hover:bg-blue-400 text-white font-bold text-2xl py-6 px-20 rounded-3xl shadow-lg 
         transform transition-transform duration-200 hover:scale-110">
  GO TO FILES
</a>
  </div>


    <!-- Success message after upload -->
    <p id="mainStatus" class="mt-4 text-lg font-medium"></p>

    <!-- Popup upload form -->
    <div class="pop hidden backdrop-blur-md fixed top-0 left-0 h-screen w-screen flex items-center justify-center z-50">
      <div class="bg-yellow-300 dark:bg-yellow-600 rounded-2xl shadow-lg p-6 w-[420px] relative">

        <h2 class="text-lg font-semibold text-gray-700 dark:text-gray-700 mb-4">Upload your file</h2>

        <form id="uploadForm" enctype="multipart/form-data">
          <div class="flex items-center justify-center w-full">
            <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-56 border-2 border-gray-300
             border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-200 
             dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 transition">
              <div class="flex flex-col items-center justify-center pt-5 pb-6">
                <i class="ri-upload-cloud-2-line text-4xl text-gray-500 dark:text-gray-400 mb-3"></i>
                <p class="mb-2 text-sm text-gray-500 dark:text-gray-400">
                  <span class="font-semibold">Click to upload</span> or drag and drop
                </p>
                <p class="text-xs text-gray-500 dark:text-gray-400">PNG, JPG, GIF, PDF (max 10MB)</p>
              </div>
              <input id="dropzone-file" type="file" class="hidden" name="file"/>
            </label>
          </div>

          <!-- Status message inside popup -->
          <p id="statusMessage" class="text-center mt-3 text-sm font-medium"></p>

          <!-- Upload button -->
          <div class="flex justify-center mt-5">
            <button type="submit" class="bg-[#C124A4] hover:bg-[#A41A8B] text-white font-bold py-2 px-4 rounded">
              Upload
            </button>
          </div>
        </form>

        <!-- Close button -->
        <button
          class="absolute top-3 right-3 text-gray-500 dark:text-gray-400 text-xl hover:text-gray-700"
          onclick="hidePop()">
          <i class="ri-close-line"></i>
        </button>
      </div>
    </div>


    <script>
  function showPop() {
    document.querySelector('.pop').style.display = 'flex';
  }
  function hidePop() {
    document.querySelector('.pop').style.display = 'none';
  }

  const form = document.getElementById("uploadForm");
  const fileInput = document.getElementById("dropzone-file");
  const statusMessage = document.getElementById("statusMessage");
  const mainStatus = document.getElementById("mainStatus");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const file = fileInput.files[0];
    if (!file) {
      statusMessage.textContent = "‚ö†Ô∏è Please select a file first!";
      statusMessage.className = "text-center mt-3 text-sm font-medium text-yellow-600";
      return;
    }

    const formData = new FormData();
    formData.append("file", file);

    // Helper to set messages in both places
    const setBoth = (text, cls) => {
      statusMessage.textContent = text;
      statusMessage.className = "text-center mt-3 text-sm font-medium " + cls;
      mainStatus.textContent = text;
      mainStatus.className = "mt-4 text-lg font-medium " + cls;
    };

    try {
      setBoth("‚è≥ Uploading...", "text-blue-600");

      const res = await fetch("http://localhost:3001/upload", {
        method: "POST",
        body: formData,
        // credentials: "include", // uncomment if your server uses cookies/sessions
      });

      // Try to read JSON if possible; else read text; else nothing
      let data = null;
      let text = "";
      const ct = (res.headers.get("content-type") || "").toLowerCase();

      if (ct.includes("application/json")) {
        try { data = await res.json(); } catch (_) {}
      } else {
        try { text = await res.text(); } catch (_) {}
      }

      // Consider 2xx as success even if body isn't JSON
      if (res.ok) {
        setBoth("‚úÖ File uploaded successfully!", "text-white-600");
        
        // setTimeout(hidePop, 1500);
        console.log("Upload success:", { status: res.status, data, text });
        return;
      }

      // Non-2xx ‚Äî use message from body if available
      const serverMsg = (data && (data.message || data.error)) || text || "Upload failed";
      throw new Error(`${res.status} ${res.statusText} - ${serverMsg}`);

    } catch (err) {
      console.error("Upload error:", err);
      setBoth("‚ùå Failed to upload file.", "text-red-700");
    }
  });
</script>


  </body>
</html>
